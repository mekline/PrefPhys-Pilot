geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~comparison) +
ggtitle('Total Looking Time')
g
LT_means_per_child_per_trial <- simulated_12session_data %>%
group_by(shortId, trialnum) %>%
summarise(TLT = mean(totalLT))
g <- ggplot(LT_means_per_child_per_trial, aes(y = TLT, x = trialnum)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~comparison) +
ggtitle('Total Looking Time')
g
LT_means_per_child_per_trial <- simulated_12session_data %>%
group_by(shortId, trialnum) %>%
summarise(TLT = mean(totalLT))
g <- ggplot(LT_means_per_child_per_trial, aes(y = TLT, x = trialnum)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Total Looking Time')
g
m <- lmer(sim_fracLessExpected  ~ session*concept + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
m <- lmer(sim_fracLessExpected  ~ sim_age + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
#Look at the pilot data
head(pilotdata)
#Key columns
# shortId - participant identifier
# ageRegistration - child age in months + fractional months
# stimuli - stimulus identifier
# trialnum - trial number
# comparison - specific comparison in physics concept (e.g. on vs. near)
# event - physics event (ramp, etc)
# concept - physics event *category* (lumps a few of the above)
# lessExpectedLeft - location of the less expected version (undefined for items that don't have a less expected version!)
# fracLessExpected - Fractional looking time to those trials! (note undefined for items that don't have a less expected version!)
# totalLT - Total trial time in case we want to recover that
# Construct simulated data! (Note, we can make this more complicated over time)
# For now, it assumes that fracLessExpected values just get higher with sessions, on slopes
# determined semi randomly for each child/concept, and that ages get older on a slighly random schedule
simulated_12session_data <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
dplyr::summarize(startMean_sim = mean(fracLessExpected), slope_sim = abs(rnorm(1,0.05,0.01)), startAge = mean(ageRegistration)) %>%#Small, usually positive slopes
uncount(12, .id = 'session') %>%
left_join(filter(pilotdata, !is.na(fracLessExpected))) %>%
mutate(sim_fracLessExpected = startMean_sim + (session-1)*slope_sim + rnorm(1,0, 0.01)) %>%
mutate(sim_fracLessExpected = ifelse(sim_fracLessExpected < 1, sim_fracLessExpected, 1)) %>%
mutate(sim_age = startAge + (session-1)*abs(rnorm(1,0.25,0.5))) #Average 1 week between sessions, no allow negative values
concept_means_per_child_per_session <- simulated_12session_data %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept, session) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = concept)) +
geom_boxplot() +
#facet_wrap(~session) +
#geom_point(alpha = 0.05) +
geom_jitter(alpha = 0.1) +
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('SIMULATED - grand means per concept')
g
concept_means_per_child_per_session <- simulated_12session_data %>%
group_by(shortId, session, concept) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Means by age')
g
LT_means_per_child_per_trial <- pilotdata %>%
group_by(shortId, trialnum) %>%
summarise(TLT = mean(totalLT))
g <- ggplot(LT_means_per_child_per_trial, aes(y = TLT, x = trialnum)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Total Looking Time')
g
concepts_means_by_age <- pilotdata %>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concepts_means_by_age, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Stay')
g
concepts_means_by_age <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concepts_means_by_age, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Stay')
g
#Look at the pilot data
head(pilotdata)
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
pilotdata <- read.csv(here("data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
#Look at the pilot data
head(pilotdata)
#Key columns
# shortId - participant identifier
# ageRegistration - child age in months + fractional months
# stimuli - stimulus identifier
# trialnum - trial number
# comparison - specific comparison in physics concept (e.g. on vs. near)
# event - physics event (ramp, etc)
# concept - physics event *category* (lumps a few of the above)
# lessExpectedLeft - location of the less expected version (undefined for items that don't have a less expected version!)
# fracLessExpected - Fractional looking time to those trials! (note undefined for items that don't have a less expected version!)
# totalLT - Total trial time in case we want to recover that!
# Construct simulated data! (Note, we can make this more complicated over time)
# For now, it assumes that fracLessExpected values just get higher with sessions, on slopes
# determined semi randomly for each child/concept, and that ages get older on a slighly random schedule
simulated_12session_data <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
dplyr::summarize(startMean_sim = mean(fracLessExpected), slope_sim = abs(rnorm(1,0.05,0.01)), startAge = mean(ageRegistration)) %>%#Small, usually positive slopes
uncount(12, .id = 'session') %>%
left_join(filter(pilotdata, !is.na(fracLessExpected))) %>%
mutate(sim_fracLessExpected = startMean_sim + (session-1)*slope_sim + rnorm(1,0, 0.01)) %>%
mutate(sim_fracLessExpected = ifelse(sim_fracLessExpected < 1, sim_fracLessExpected, 1)) %>%
mutate(sim_age = startAge + (session-1)*abs(rnorm(1,0.25,0.5))) #Average 1 week between sessions, no allow negative values
LT_means_per_child_per_trial <- pilotdata %>%
group_by(shortId, trialnum) %>%
summarise(TLT = mean(totalLT))
g <- ggplot(LT_means_per_child_per_trial, aes(y = TLT, x = trialnum)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Total Looking Time')
g
concept_means_per_child_per_session <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = concept)) +
geom_boxplot() +
#facet_wrap(~session) +
#geom_point(alpha = 0.05) +
geom_jitter(alpha = 0.1) +
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Grand means per concept')
g
concepts_means_by_age <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concepts_means_by_age, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Stay')
g
concept_means_per_child_per_session <- simulated_12session_data %>%
group_by(shortId, session, concept) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Means by age')
g
stay_means_per_child_per_comparison <- simulated_12session_data %>%
filter(event == 'stay') %>%
group_by(shortId, session, comparison) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
pilotdata <- read.csv(here("data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
#Look at the pilot data
head(pilotdata)
#Key columns
# shortId - participant identifier
# ageRegistration - child age in months + fractional months
# stimuli - stimulus identifier
# trialnum - trial number
# comparison - specific comparison in physics concept (e.g. on vs. near)
# event - physics event (ramp, etc)
# concept - physics event *category* (lumps a few of the above)
# lessExpectedLeft - location of the less expected version (undefined for items that don't have a less expected version!)
# fracLessExpected - Fractional looking time to those trials! (note undefined for items that don't have a less expected version!)
# totalLT - Total trial time in case we want to recover that!
# Construct simulated data! (Note, we can make this more complicated over time)
# For now, it assumes that fracLessExpected values just get higher with sessions, on slopes
# determined semi randomly for each child/concept, and that ages get older on a slighly random schedule
simulated_12session_data <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
dplyr::summarize(startMean_sim = mean(fracLessExpected), slope_sim = abs(rnorm(1,0.05,0.01)), startAge = mean(ageRegistration)) %>%#Small, usually positive slopes
uncount(12, .id = 'session') %>%
left_join(filter(pilotdata, !is.na(fracLessExpected))) %>%
mutate(sim_fracLessExpected = startMean_sim + (session-1)*slope_sim + rnorm(1,0, 0.01)) %>%
mutate(sim_fracLessExpected = ifelse(sim_fracLessExpected < 1, sim_fracLessExpected, 1)) %>%
mutate(sim_age = startAge + (session-1)*abs(rnorm(1,0.25,0.5))) #Average 1 week between sessions, no allow negative values
LT_means_per_child_per_trial <- pilotdata %>%
group_by(shortId, trialnum) %>%
summarise(TLT = mean(totalLT))
g <- ggplot(LT_means_per_child_per_trial, aes(y = TLT, x = trialnum)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Total Looking Time')
g
concept_means_per_child_per_session <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = concept)) +
geom_boxplot() +
#facet_wrap(~session) +
#geom_point(alpha = 0.05) +
geom_jitter(alpha = 0.1) +
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('Grand means per concept')
g
concepts_means_by_age <- pilotdata %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept) %>%
summarise(fLE = mean(fracLessExpected), age = first(ageRegistration))
g <- ggplot(concepts_means_by_age, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Stay')
g
concept_means_per_child_per_session <- simulated_12session_data %>%
filter(!is.na(fracLessExpected))%>%
group_by(shortId, concept, session) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = concept)) +
geom_boxplot() +
#facet_wrap(~session) +
#geom_point(alpha = 0.05) +
geom_jitter(alpha = 0.1) +
geom_hline(yintercept=0.5, linetype = 'dashed')+
ggtitle('SIMULATED - grand means per concept')
g
concept_means_per_child_per_session <- simulated_12session_data %>%
group_by(shortId, session, concept) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(concept_means_per_child_per_session, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~concept) +
ggtitle('Means by age')
g
stay_means_per_child_per_comparison <- simulated_12session_data %>%
filter(event == 'stay') %>%
group_by(shortId, session, comparison) %>%
summarise(fLE = mean(sim_fracLessExpected), age = first(sim_age))
g <- ggplot(stay_means_per_child_per_comparison, aes(y = fLE, x = age)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")+
geom_hline(yintercept=0.5, linetype = 'dashed')+
facet_wrap(~comparison) +
ggtitle('Stay')
g
m <- lme(totalLT ~ trialnum, data = simulated_12session_data, random = ~ 1 | shortId) # LME model, grouping by participant
summary(m)
m <- lmer(totalLT ~ trialnum + (1 | shortId), data = simulated_12session_data) # LME model, grouping by participant
summary(m)
m <- lmer(sim_fracLessExpected ~ 1 + (1 | shortId), data = simulated_12session_data)
summary(m)
m <- lmer(sim_fracLessExpected  ~ 1 + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
m <- lmer(sim_fracLessExpected  ~ sim_age + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
m <- lmer(sim_fracLessExpected  ~ session*trial + sim_age*trial + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
m <- lmer(sim_fracLessExpected  ~ sim_age + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
m <- lmer(sim_fracLessExpected  ~ session*trialnum + sim_age*trialnum + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
m <- lmer(sim_fracLessExpected  ~ sim_age + (1 | shortId) + (1|stimuli), data = simulated_12session_data)
summary(m)
n <- lmer(sim_fracLessExpected  ~ 1 + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
anova(n,m)
names(simulated_12session_data)
unique(simulated_12session_data$concept)
unique(simulated_12session_data$event)
unique(simulated_12session_data$comparison)
unique(pilotdata$comparison)
unique(pilotdata$event)
unique(pilotdata$concept)
m <- lmer(sim_fracLessExpected  ~ event*concept + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
m <- lmer(sim_fracLessExpected  ~ event+concept + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
m <- lmer(sim_fracLessExpected  ~ event + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
unique(simulated_12session_data$event)
m <- lmer(sim_fracLessExpected  ~ event + concept + comparison + (1|shortId) + (1|stimuli), data = simulated_12session_data) # LME model, grouping by participant * stimuli
summary(m)
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
pilotdata <- read.csv(here("data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
#NOTE: Won't work off of Melissa's laptop for privacy, use the following instead
#pilotdata <- read.csv(here("data","salted_pilot_included_trials.csv"), stringsAsFactors = FALSE)
names(pilotdata)
head(pilotdata)
head(select(pilodata, child.profileId, ageRegistration, ageExitsurvey))
head(select(pilotdata, child.profileId, ageRegistration, ageExitsurvey))
set.seed(25432)
library(ids)
install.packages("ids")
ids
library(ids)
help(ids)
ids(12)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = Inf)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
adjective_animal(n = 1, n_adjectives = 1, style = "snake",
max_len = 10)
proquint(1)
proquint(1)
proquint(1)
proquint(1)
proquint(1)
salted_pilotdata <- pilotdata%>%
mutate(child.profileId = proquint)
set.seed(25432)
salted_pilotdata <- pilotdata%>%
mutate(child.profileId = proquint())
salted_pilotdata$child.profileId
salted_pilotdata <- pilotdata%>%
group_by(child.profileId)
mutate(child.profileId = proquint())
salted_pilotdata <- pilotdata%>%
group_by(child.profileId) %>%
mutate(child.profileId = proquint())
salted_pilotdata <- pilotdata%>%
group_by(child.profileId) %>%
mutate(new.child.profileId = proquint())
View(select(salted_pilotdata, new.child.profileId, child.profileId))
pilotdata <- pilotdata %>%
group_by(child.profileId) %>%
mutate(child.proquint = proquint())%>%
ungroup()%>%
select(-child.profileId)
write.csv(here("data","salted_pilot_included_trials.csv"))
help("write.csv")
write.csv(pilotdata, here("data","salted_pilot_included_trials.csv"))
write.csv(pilotdata, here("data","salted_pilot_included_trials.csv"), row.names = FALSE)
pilotdata <- pilotdata %>%
group_by(child.profileId) %>%
mutate(child.proquint = proquint())%>%
ungroup()%>%
select(-c(child.profileId,X))
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
library(ids)
pilotdata <- read.csv(here("data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
#NOTE: Won't work off of Melissa's laptop for privacy, use the following instead
#pilotdata <- read.csv(here("data","salted_pilot_included_trials.csv"), stringsAsFactors = FALSE)
head(pilotdata)
#Columns that may include PII
#-Birthday
#-Test date + age
#-Name/email strings
head(select(pilotdata, child.profileId, ageRegistration, ageExitsurvey))
#Good news! Only profileId is a possible danger; dataset has age but is fully date free
set.seed(25432)
pilotdata <- pilotdata %>%
group_by(child.profileId) %>%
mutate(child.proquint = proquint())%>%
ungroup()%>%
select(-c(child.profileId,X))
write.csv(pilotdata, here("data","salted_pilot_included_trials.csv"), row.names = FALSE)
#NOTE: Won't work off of Melissa's laptop for privacy, use the following instead
help(here)
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
library(ids)
pilotdata <- read.csv(here("data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
library(ids)
pilotdata <- read.csv(here("raw_data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
library(here)
library(tidyr)
library(dplyr)
library(stringr)
library(tibble)
#library(vioplot)
#library(corrgram)
library(Hmisc)
library(car)
library(nlme) # allows use of weights
library(lme4) # newer/maintained, allows logistic regression
library(lsmeans)
library(MuMIn)
library(ids)
pilotdata <- read.csv(here("raw_data","pilot_included_trials.csv"), stringsAsFactors = FALSE)
here()
